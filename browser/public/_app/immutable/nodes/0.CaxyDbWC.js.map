{"version":3,"file":"0.CaxyDbWC.js","sources":["../../../../../../src/routes/+layout.ts","../../../../../../src/assets/disk_usage.svg","../../../../../../node_modules/svelte/src/transition/index.js","../../../../../../src/lib/Login.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["// Tauri doesn't have a Node.js server to do proper SSR\n// so we use adapter-static with a fallback to index.html to put the site in SPA mode\n// See: https://svelte.dev/docs/kit/single-page-apps\n// See: https://v2.tauri.app/start/frontend/sveltekit/ for more info\nexport const ssr = false;\n","export default \"__VITE_ASSET__uiVGFkDk__\"","/** @import { BlurParams, CrossfadeParams, DrawParams, FadeParams, FlyParams, ScaleParams, SlideParams, TransitionConfig } from './public' */\n\nimport { DEV } from 'esm-env';\nimport * as w from '../internal/client/warnings.js';\n\n/** @param {number} x */\nconst linear = (x) => x;\n\n/** @param {number} t */\nfunction cubic_out(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nfunction cubic_in_out(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nfunction split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * @param {Element} node\n * @param {BlurParams} [params]\n * @returns {TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_in_out, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * @param {Element} node\n * @param {FadeParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * @param {Element} node\n * @param {FlyParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [x_value, x_unit] = split_css_unit(x);\n\tconst [y_value, y_unit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x_value}${x_unit}, ${(1 - t) * y_value}${y_unit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\nvar slide_warning = false;\n\n/**\n * Slides an element in and out.\n *\n * @param {Element} node\n * @param {SlideParams} [params]\n * @returns {TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubic_out, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\n\tif (DEV && !slide_warning && /(contents|inline|table)/.test(style.display)) {\n\t\tslide_warning = true;\n\t\tPromise.resolve().then(() => (slide_warning = false));\n\t\tw.transition_slide_display(style.display);\n\t}\n\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => /** @type {'Left' | 'Right' | 'Top' | 'Bottom'} */ (`${e[0].toUpperCase()}${e.slice(1)}`)\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;` +\n\t\t\t`min-${primary_property}: 0`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from the provided values, passed as parameters, to an element's current (default) values. `out` transitions animate from an element's default values to the provided values.\n *\n * @param {Element} node\n * @param {ScaleParams} [params]\n * @returns {TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {DrawParams} [params]\n * @returns {TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubic_in_out } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nfunction assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs/svelte/transition) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * @param {CrossfadeParams & {\n * \tfallback?: (node: Element, params: CrossfadeParams, intro: boolean) => TransitionConfig;\n * }} params\n * @returns {[(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig, (node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {CrossfadeParams} params\n\t * @returns {TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = /** @param {number} d */ (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubic_out\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: typeof duration === 'function' ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t   opacity: ${t * opacity};\n\t\t\t   transform-origin: top left;\n\t\t\t   transform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\t\t\tt + (1 - t) * dh\n\t\t\t\t\t});\n\t\t   `\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\t// @ts-expect-error TODO improve typings (are the public types wrong?)\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(/** @type {Element} */ (other_node), node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","<script>\r\n    import { State, API_URL } from '../ts/store.svelte';\r\n    import { fade } from 'svelte/transition';\r\n    import { getOptimalColors } from '../ts/util';\r\n\r\n    let username = $state();\r\n    let password = $state();\r\n    let working = $state();\r\n    let error = $state('');\r\n    let url = `${API_URL}/login`;\r\n\r\n    // minimal base64url → JSON decoder (no signature verification)\r\n    function parseJwt(token) {\r\n        try {\r\n        const payload = token.split('.')[1] || '';\r\n        let b64 = payload.replace(/-/g, '+').replace(/_/g, '/');\r\n        const pad = b64.length % 4; if (pad) b64 += '='.repeat(4 - pad);\r\n        const json = atob(b64);\r\n        return JSON.parse(json);\r\n        } catch {\r\n        return {};\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        try {\r\n        working = true;\r\n        error = '';\r\n\r\n        const resp = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json', \r\n                'Accept': 'application/json' \r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        const data = await resp.json().catch(() => ({}));\r\n\r\n        if (resp.ok) {\r\n            const token = data.access_token;\r\n            if (!token) {\r\n                error = 'Malformed server response (missing token).';\r\n                return;\r\n            }\r\n            const claims = parseJwt(token)\r\n            console.log('claims:', claims)\r\n            const expires_at = claims?.exp ? claims.exp * 1000 : null;\r\n\r\n            // update app state\r\n            State.username  = claims?.sub || username;\r\n            State.isAdmin  = !!claims?.is_admin;\r\n            State.token     = token;\r\n            //State.expires_at = expires_at;\r\n\r\n            localStorage.setItem('state', JSON.stringify(State));\r\n\r\n            // (optional) redirect after login\r\n            // location.href = '/#/';\r\n        } else {\r\n            error = data.error || data.detail || 'Invalid credentials';\r\n        }\r\n        } catch (err) {\r\n            console.error(err);\r\n            error = 'Network error. Please try again.';\r\n        } finally {\r\n            // clear pw from memory/UI\r\n            password = '';\r\n            working = false;\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<div in:fade={{ duration: 500 }} \r\n    class=\"flex flex-col gap-4 justify-center items-center h-full text-white\">\r\n    <div class=\"flex w-full\">\r\n        {#each getOptimalColors(30) as color}\r\n        <div class=\"w-10 h-2\" style=\"background: {color}\"></div>\r\n        {/each}\r\n    </div>\r\n    <div class=\"flex flex-col gap-4 w-1/2 mt-20 items-center justify-center\">\r\n        <div class=\"flex flex-col gap-2 p-6 border w-1/2 min-w-80\r\n            items-center justify-center\r\n            border-gray-500 bg-gray-800 rounded-lg shadow-lg \">\r\n            <form class=\"space-y-4 w-full\" onsubmit={onSubmit}>\r\n                <div>\r\n                    <label class=\"block text-sm font-medium\" for=\"username\">Username</label>\r\n                    <input \r\n                        bind:value={username}\r\n                        class=\"w-full\" \r\n                        id=\"username\" \r\n                        placeholder=\"Linux user\"\r\n                        type=\"text\" \r\n                        required \r\n                        disabled={working}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label class=\"block text-sm font-medium \" for=\"password\">Password</label>\r\n                    <input \r\n                        bind:value={password}\r\n                        class=\"w-full\" \r\n                        id=\"password\" \r\n                        placeholder=\"Linux password\"\r\n                        type=\"password\" \r\n                        required \r\n                        disabled={working}\r\n                    />\r\n                </div>\r\n                <div class=\"flex items-right justify-end\">            \r\n                    <button \r\n                        class=\"btn w-full\"\r\n                        type=\"submit\"\r\n                        disabled={working}\r\n                    >\r\n                        {#if working}\r\n                            <span class=\"animate-spin border-2 border-t-transparent rounded-full w-5 h-5 inline-block\"></span>\r\n                        {:else}\r\n                            Log in\r\n                        {/if}\r\n                    </button>\r\n                </div>\r\n            </form>        \r\n        </div>        \r\n    </div>\r\n    {#if error}\r\n        <p class=\"w-1/2 bg-red-100 text-red-700 p-2 rounded text-sm text-center\">{error}</p>\r\n    {/if}        \r\n    <div class=\"grow\"></div>\r\n</div>\r\n","<script>\n  // keep your imports\n  import \"../app.css\";\n  import logo from '../assets/disk_usage.svg';\n  import Login from '../lib/Login.svelte';\n  import { State } from '../ts/store.svelte';\n\n  let { children } = $props()\n  let authed = $derived(\n      Boolean(State.token) \n    && (!State.expiresAt || Date.now() < State.expiresAt)\n  )\n\n  $effect(() => {\n    authed = Boolean(State.token) && (!State.expiresAt || Date.now() < State.expiresAt);\n  });\n\n  function logout() {\n    State.logout()\n    localStorage.removeItem('state');\n  }\n\n  function onLogout() {\n    logout();\n  }\n\n</script>\n\n<div class=\"flex flex-col h-screen min-h-0 overflow-hidden\">\n  <div class=\"flex items-center justify-between p-4 text-xl border-b border-gray-500 text-gray-200 select-none\">\n    <div class=\"flex gap-2 items-center\">\n      <div><img src={logo} width={28} alt=\"logo\" /></div>\n      <div>Dutopia 3.0</div>\n    </div>\n\n    <div class=\"grow\"></div>\n\n    <!-- NEW: small auth status / logout -->\n    {#if authed}\n      <div class=\"flex items-center gap-3 text-sm\">\n        <span class=\"opacity-80\">{State.username}</span>\n        {#if State.isAdmin}\n          <span class=\"px-2 py-1 rounded bg-emerald-600 text-white\">Admin</span>\n        {/if}\n        <button class=\"px-3 py-1 rounded bg-gray-700 hover:bg-gray-600\" \n          onclick={onLogout}>\n          Logout\n        </button>\n      </div>\n    {/if}\n  </div>\n\n  <div class=\"flex flex-col h-full overflow-hidden p-2 bg-[var(--color)]\">\n    {#if authed}\n      {@render children()}\n    {:else}\n      <Login />\n    {/if}\n  </div>\n</div>\n"],"names":["ssr","logo","linear","x","fade","node","delay","duration","easing","o","t","username","$.state","password","working","error","url","API_URL","parseJwt","token","b64","pad","json","onSubmit","$.set","resp","$.get","data","claims","expires_at","State","err","getOptimalColors","$.index","$$anchor","color","$$render","consequent","alternate","consequent_1","$.bind_value","input","$$value","input_1","$.transition","div","onLogout","logout","authed","$.user_effect","$.template_effect","$.set_text","text","consequent_2"],"mappings":"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","x_google_ignoreList":[2]}